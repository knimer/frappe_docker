name: ${FRAPPE_INSTANCE}

x-customizable-image: &customizable_image
  # By default the image used only contains the `frappe` and `erpnext` apps.
  # See https://github.com/frappe/frappe_docker/blob/main/docs/custom-apps.md
  # about using custom images.
  image: ${CUSTOM_IMAGE:-frappe/erpnext}:${CUSTOM_TAG:-$ERPNEXT_VERSION}
  pull_policy: ${PULL_POLICY:-always}

x-depends-on-configurator: &depends_on_configurator
  depends_on:
    configurator:
      condition: service_completed_successfully

x-backend-defaults: &backend_defaults
  <<: [*depends_on_configurator, *customizable_image]
  volumes:
    - sites:/home/frappe/frappe-bench/sites

services:
  configurator:
    <<: *backend_defaults
    platform: ${PLATFORM}
    entrypoint:
      - bash
      - -c
    # add redis_socketio for backward compatibility
    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
    environment:
      DB_HOST: ${DB_HOST:-}
      DB_PORT: ${DB_PORT:-}
      REDIS_CACHE: ${REDIS_CACHE:-}
      REDIS_QUEUE: ${REDIS_QUEUE:-}
      SOCKETIO_PORT: ${SOCKETIO_PORT:-9000}
    depends_on: {}

  backend:
    <<: *backend_defaults
    platform: ${PLATFORM}
    deploy:
      restart_policy:
        condition: unless-stopped
    extra_hosts:
      - ${EXTRA_HOSTS_MAIL}
      - ${EXTRA_HOSTS_WEB}
      - ${EXTRA_HOSTS_ERP}
      - ${EXTRA_HOSTS_WWW}

  create-site:
    image: ${CUSTOM_IMAGE}:${CUSTOM_TAG}
    deploy:
      restart_policy:
        condition: none
    depends_on:
      erp-openly-db:
        condition: service_healthy
        required: true
      backend:
        condition: service_started
        required: true
      configurator:
        condition: service_completed_successfully
        required: true
    volumes:
      - sites:/home/frappe/frappe-bench/sites
    environment:
      DB_HOST: ${DB_HOST:-}
      DB_PORT: ${DB_PORT:-}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_CACHE: ${REDIS_CACHE:-}
      REDIS_QUEUE: ${REDIS_QUEUE:-}
      SOCKETIO_PORT: ${SOCKETIO_PORT:-9000}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SITE_NAME: ${SITE_NAME}
      APPS_TO_INSTALL: ${APPS_TO_INSTALL}
    entrypoint:
      - bash
      - -c
    command:
      - >
        wait-for-it -t 120 $$DB_HOST:$$DB_PORT;
        wait-for-it -t 120 $$REDIS_CACHE;
        wait-for-it -t 120 $$REDIS_QUEUE;
        export start=`date +%s`;
        until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];
        do
          echo "Waiting for sites/common_site_config.json to be created";
          sleep 5;
          if (( `date +%s`-start > 120 )); then
            echo "could not find sites/common_site_config.json with required keys";
            exit 1
          fi
        done;
        echo "sites/common_site_config.json found";
        bench new-site --mariadb-user-host-login-scope='%' --admin-password=$$ADMIN_PASSWORD --db-host $$DB_HOST --db-port $$DB_PORT --db-name $$DB_NAME --db-password $$DB_PASSWORD --db-root-username=root --db-root-password=$$MYSQL_ROOT_PASSWORD $$SITE_NAME;
        bench use $$SITE_NAME;
        bench --site $$SITE_NAME enable-scheduler;
        bench --site $$SITE_NAME --install-app erpnext;
        bench --site $$SITE_NAME set-config host_name $$SITE_NAME;
        for frappe_app in $$APPS_TO_INSTALL; do
          echo "Installing the App: $$frappe_app in site: $$SITE_NAME."
          bench --site $$SITE_NAME install-app $$frappe_app
        done
        bench --site $$SITE_NAME build
        bench --site $$SITE_NAME migrate
      # bench --site $$SITE_NAME install-app $$APPS_TO_INSTALL;

  frontend:
    <<: *customizable_image
    platform: ${PLATFORM}
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: ${BACKEND}
      SOCKETIO: ${SOCKETIO}
      SOCKETIO_PORT: ${SOCKETIO_PORT}
      FRAPPE_SITE_NAME_HEADER: ${FRAPPE_SITE_NAME_HEADER:-$$host}
      UPSTREAM_REAL_IP_ADDRESS: ${UPSTREAM_REAL_IP_ADDRESS:-127.0.0.1}
      UPSTREAM_REAL_IP_HEADER: ${UPSTREAM_REAL_IP_HEADER:-X-Forwarded-For}
      UPSTREAM_REAL_IP_RECURSIVE: ${UPSTREAM_REAL_IP_RECURSIVE:-off}
      PROXY_READ_TIMEOUT: ${PROXY_READ_TIMEOUT:-120}
      CLIENT_MAX_BODY_SIZE: ${CLIENT_MAX_BODY_SIZE:-50m}
    deploy:
      restart_policy:
        condition: unless-stopped
    volumes:
      - sites:/home/frappe/frappe-bench/sites
    depends_on:
      backend:
        condition: service_started
      websocket:
        condition: service_started
      configurator:
        condition: service_completed_successfully
      create-site:
        condition: service_completed_successfully

  websocket:
    <<: [*depends_on_configurator, *customizable_image]
    platform: ${PLATFORM}
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites

  queue-short:
    <<: *backend_defaults
    platform: ${PLATFORM}
    command: bench worker --queue short,default

  queue-long:
    <<: *backend_defaults
    platform: ${PLATFORM}
    command: bench worker --queue long,default,short

  scheduler:
    <<: *backend_defaults
    platform: ${PLATFORM}
    command: bench schedule

# ERPNext requires local assets access (Frappe does not)
volumes:
  sites:
  
